{
  "fileTypes": [
    "abap",
    "ABAP"
  ],
  "foldingStartMarker": "/\\*\\*|\\{\\s*$",
  "foldingStopMarker": "\\*\\*/|^\\s*\\}",
  "keyEquivalent": "^~A",
  "name": "ABAP",
  "patterns": [
    {
      "captures": {
        "1": {
          "name": "punctuation.definition.comment.abap"
        }
      },
      "match": "^\\*.*\\n?",
      "name": "comment.line.full.abap"
    },
    {
      "captures": {
        "1": {
          "name": "punctuation.definition.comment.abap"
        }
      },
      "match": "\".*\\n?",
      "name": "comment.line.partial.abap"
    },
    {
      "match": "##.*?(?=\\s)",
      "name": "comment.line.pragma.abap"
    },
    {
      "match": "\\b[0-9]+(\\b|\\.|,)",
      "name": "constant.numeric.abap"
    },
    {
      "begin": "'",
      "end": "'",
      "name": "string.quoted.single.abap",
      "patterns": [
        {
          "match": "''",
          "name": "constant.character.escape.abap"
        }
      ]
    },
    {
      "begin": "(?i)^\\s*(class|method|form)\\s+(?=[a-z_][a-z_0-9])",
      "beginCaptures": {
        "1": {
          "name": "storage.type.block.abap"
        }
      },
      "end": "\\s*\\.\\s*\\n?",
      "name": "meta.block.begin.implementation.abap",
      "patterns": [
        {
          "begin": "(?=[A-Za-z_][A-Za-z0-9_]*)",
          "contentName": "entity.name.type.block.abap",
          "end": "(?![A-Za-z0-9_])",
          "patterns": [
            {
              "include": "#generic_names"
            }
          ]
        }
      ]
    },
    {
      "match": "(?i)(endclass|endmethod|endform)",
      "name": "storage.type.block.end.abap"
    },
    {
      "match": "(?i)(<[A-Za-z_][A-Za-z0-9_]*>)",
      "name": "meta.variable.other.field.symbol.abap"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#abap_constants"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#abaptypes"
    }
  ],
  "repository": {
    "abap_constants": {
      "match": "(?ix)\\b(initial|null|space|abap_true|abap_false)(?=\\.|\\s)",
      "name": "constant.language.abap"
    },
    "abaptypes": {
      "match": "(?ix)\\s(abap_bool|string|xstring|any|clike|csequence|numeric|xsequence|c|n|i|p|f|d|t|x)(?=\\s|\\.|,)",
      "name": "support.type.abap"
    },
    "arithmetic_operator": {
      "match": "\\s(\\+|\\-|\\*|\\*\\*|/|%)\\s",
      "name": "keyword.operator.arithmetic.abap"
    },
    "comparison_operator": {
      "match": "(?i)\\s(<|>|<\\=|>\\=|\\=|<>|eq|ne|lt|le|gt|ge|cs)\\s",
      "name": "keyword.operator.comparison.abap"
    },
    "control_keywords": {
      "match": "(?ix)(^|\\s)(at|case|catch|continue|do|elseif|else|endat|endcase|enddo|endif|endloop|endon|if|loop|on|raise|try)(?=\\s|\\.|:)",
      "name": "keyword.control.flow.abap"
    },
    "generic_names": {
      "match": "[A-Za-z_][A-Za-z0-9_]*"
    },
    "hyphenated_keywords": {
      "match": "(?ix)(^|\\s)(add-corresponding|authority-check|break-point|class-data|class-method|class-methods|divide-corresponding|display-mode|editor-call|end-of-definition|end-of-page|end-of-selection|field-groups|field-symbols|function-pool|left-justified|line-count|line-size|message-id|move-corresponding|multiply-corresponding|new-line|new-page|new-section|no-gap|no-sign|no-zero|print-control|read-only|right-justified|rp-provide-from-last|select-options|selection-screen|start-of-selection|subtract-corresponding|syntax-check|syntax-trace|system-call|top-of-page|type-pool|type-pools)(?=\\s|\\.|:)",
      "name": "keyword.control.hyphenated.abap"
    },
    "keywords": {
      "patterns": [
        {
          "include": "#hyphenated_keywords"
        },
        {
          "include": "#main_keywords"
        },
        {
          "include": "#control_keywords"
        },
        {
          "include": "#short_keywords"
        },
        {
          "include": "#keywords_followed_by_braces"
        },
        {
          "include": "#system_fields"
        }
      ]
    },
    "logical_operator": {
      "match": "(?i)\\b(is|not|or|and)\\b",
      "name": "keyword.operator.arithmetic.abap"
    },
    "main_keywords": {
      "match": "(?ix)(^|\\s)(abstract|alias|aliases|append|ascending|assert|assign|assigning|back|begin|binary|bound|byte|call|changing|check|clear|close|cnt|collect|commit|character|corresponding|communication|component|compute|concatenate|condense|constants|controls|convert|create|currency|data|descending|default|define|definition|deferred|delete|describe|detail|divide|deleting|end|endexec|endfunction|ending|endinterface|endmodule|endprovide|endselect|endtry|endwhile|event|events|exec|exit|export|exporting|extract|exception|exceptions|fetch|fields|format|free|from|function|find|generate|hide|import|importing|index|infotypes|initial|initialization|interface|interfaces|input|insert|implementation|into|leave|like|line|load|local|length|left|leading|method|message|methods|modify|module|move|multiply|match|object|obligatory|overlay|optional|others|occurrences|occurs|offset|pack|parameters|perform|position|private|program|protected|provide|public|radiobutton|raising|ranges|receive|receiving|redefinition|reference|refresh|regex|reject|results|replace|report|reserve|restore|return|returning|rollback|read|scan|screen|scroll|search|select|separated|shift|single|skip|sort|sorted|split|standard|statics|starting|step|stop|structure|submatches|submit|subtract|summary|supplied|suppress|section|tables|table|times|titlebar|transfer|transformation|translate|types|type|unassign|uline|unpack|update|using|value|when|while|window|write|where|with|work)(?=\\s|\\.|:)",
      "name": "keyword.control.simple.abap"
    },
    "math_operators": {
      "match": "(?ix)\\s(abs|sign|ceil|floor|trunc|frac|acos|asin|atan|cos|sin|tan|cosh|sinh|tanh|exp|log|log10|sqrt)\\(",
      "name": "keyword.operator.math.abap"
    },
    "keywords_followed_by_braces": {
      "match": "(?ix)\\s(data|value)(?=\\()",
      "name": "keyword.control.simple.abap"
    },
    "system_fields":{
      "match": "(?ix)\\b(sy-)(abcde|batch|binpt|calld|callr|colno|cpage|cprog|cucol|curow|datar|datlo|datum|dayst|dbcnt|dbnam|dbsysc|dyngr|dynnr|fdayw|fdpos|host|index|langu|ldbpg|lilli|linct|linno|linsz|lisel|listi|loopc|lsind|macol|mandt|marow|modno|msgid|msgno|msgty|msgv[1-4]|opsysc|pagno|pfkey|repid|saprl|scols|slset|spono|srows|staco|staro|stepl|subrc|sysid|tabix|tcode|tfill|timlo|title|tleng|tvar[0-9]|tzone|ucomm|uline|uname|uzeit|vline|wtitl|zonlo)(?=\\.|\\s)",
      "name": "variable.language.abap"
    },
    "operators": {
      "patterns": [
        {
          "include": "#other_operator"
        },
        {
          "include": "#math_operators"
        },
        {
          "include": "#string_operators"
        },
        {
          "include": "#arithmetic_operator"
        },
        {
          "include": "#comparison_operator"
        },
        {
          "include": "#logical_operator"
        }
      ]
    },
    "other_operator": {
      "match": "\\s(&&|\\?\\=)\\s",
      "name": "keyword.operator.other.abap"
    },
    "short_keywords": {
      "match": "(?i)\\s(add|all|by|in|get|of|put|ref|set|sum|to)(?=\\s|\\.|:)",
      "name": "keyword.control.short.abap"
    },
    "string_operators": {
      "match": "(?ix)\\s(strlen|xstrlen|charlen|lines|numofchar|dbmaxlen)\\(",
      "name": "keyword.operator.string.abap"
    }
  },
  "scopeName": "source.abap",
  "uuid": "0357FFB4-EFFF-4DE9-8371-B0F9C8DF1B21"
}