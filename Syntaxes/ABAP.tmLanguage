<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
	<dict>
		<key>fileTypes</key>
		<array>
			<string>abap</string>
			<string>ABAP</string>
		</array>
		<key>foldingStartMarker</key>
		<string>/\*\*|\{\s*$</string>
		<key>foldingStopMarker</key>
		<string>\*\*/|^\s*\}</string>
		<key>keyEquivalent</key>
		<string>^~A</string>
		<key>name</key>
		<string>ABAP</string>
		<key>patterns</key>
		<array>
			<dict>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.comment.abap</string>
					</dict>
				</dict>
				<key>match</key>
				<string>^\*.*\n?</string>
				<key>name</key>
				<string>comment.line.full.abap</string>
			</dict>
			<dict>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.comment.abap</string>
					</dict>
				</dict>
				<key>match</key>
				<string>".*\n?</string>
				<key>name</key>
				<string>comment.line.partial.abap</string>
			</dict>
			<dict>
				<key>match</key>
				<string>(?&lt;![^\s])##.*?(?=([\.:,\s]))</string>
				<key>name</key>
				<string>comment.line.pragma.abap</string>
			</dict>
			<dict>
				<key>match</key>
				<string>(?i)(?&lt;=(?:\s|~|-))(?&lt;=(?:-&gt;|=&gt;))([a-z_\/][a-z_0-9\/]*)(?=\s+(?:=|\+=|-=|\*=|\/=|&amp;&amp;=|&amp;=)\s+)</string>
				<key>name</key>
				<string>variable.other.abap</string>
			</dict>
			<dict>
				<key>match</key>
				<string>\b[0-9]+(\b|\.|,)</string>
				<key>name</key>
				<string>constant.numeric.abap</string>
			</dict>
			<dict>
				<key>match</key>
				<string>(?ix)(^|\s+)((PUBLIC|PRIVATE|PROTECTED)\sSECTION)(?=\s+|:|\.)</string>
				<key>name</key>
				<string>storage.modifier.class.abap</string>
			</dict>
			<dict>
				<key>begin</key>
				<string>(?&lt;!\\)(\|)(.*?)</string>
				<key>end</key>
				<string>(?&lt;!\\)(\||(\\\\\|))</string>
				<key>name</key>
				<string>string.interpolated.abap</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>constant.character.escape.abap</string>
					</dict>
				</dict>
				<key>endCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>constant.character.escape.abap</string>
					</dict>
				</dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>match</key>
						<string>({ )|( })</string>
						<key>name</key>
						<string>constant.character.escape</string>
					</dict>
					<dict>
						<key>match</key>
						<string>(?&lt;={ ).*?(?= })</string>
						<key>name</key>
						<string>variable.other.abap</string>
					</dict>
					<dict>
						<key>match</key>
						<string>\\\|</string>
						<key>name</key>
						<string>constant.character.escape.abap</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>'</string>
				<key>end</key>
				<string>'</string>
				<key>name</key>
				<string>string.quoted.single.abap</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>match</key>
						<string>''</string>
						<key>name</key>
						<string>constant.character.escape.abap</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>`</string>
				<key>end</key>
				<string>`</string>
				<key>name</key>
				<string>string.quoted.single.abap</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>match</key>
						<string>``</string>
						<key>name</key>
						<string>constant.character.escape.abap</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>(?i)^\s*(class)\s([a-z_\/][a-z_0-9\/]*)</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>storage.type.block.abap</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>entity.name.type.block.abap</string>
					</dict>
				</dict>
				<key>end</key>
				<string>\s*\.\s*\n?</string>
				<key>name</key>
				<string>meta.block.begin.implementation.abap</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>match</key>
						<string>(?ix)(^|\s+)(definition|implementation|public|inheriting\s+from|final|deferred|abstract|shared\s+memory\s+enabled|(global|local)*\s*friends|(create\s+(public|protected|private))|for\s+behavior\s+of|for\s+testing|risk\s+level\s+(critical|dangerous|harmless))|duration\s(short|medium|long)(?=\s+|\.)</string>
						<key>name</key>
						<string>storage.modifier.class.abap</string>
					</dict>
					<dict>
						<key>begin</key>
						<string>(?=[A-Za-z_][A-Za-z0-9_]*)</string>
						<key>contentName</key>
						<string>entity.name.type.block.abap</string>
						<key>end</key>
						<string>(?![A-Za-z0-9_])</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#generic_names</string>
							</dict>
						</array>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>(?ix)^\s*(method)\s(?:([a-z_\/][a-z_0-9\/]*)~)?([a-z_\/][a-z_0-9\/]*)</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>storage.type.block.abap</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>entity.name.type.abap</string>
					</dict>
					<key>3</key>
					<dict>
						<key>name</key>
						<string>entity.name.function.abap</string>
					</dict>
				</dict>
				<key>end</key>
				<string>\s*\.\s*\n?</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>match</key>
						<string>(?ix)(?&lt;=^|\s)(BY\s+DATABASE(\s+PROCEDURE|\s+FUNCTION|\s+GRAPH\s+WORKSPACE)|BY\s+KERNEL\s+MODULE)(?=\s+|\.)</string>
						<key>name</key>
						<string>storage.modifier.method.abap</string>
					</dict>
					<dict>
						<key>match</key>
						<string>(?ix)(?&lt;=^|\s)(FOR\s+(HDB|LLANG))(?=\s+|\.)</string>
						<key>name</key>
						<string>storage.modifier.method.abap</string>
					</dict>
					<dict>
						<key>match</key>
						<string>(?ix)(?&lt;=\s)(OPTIONS\s+(READ-ONLY|DETERMINISTIC|SUPPRESS\s+SYNTAX\s+ERRORS))(?=\s+|\.)</string>
						<key>name</key>
						<string>storage.modifier.method.abap</string>
					</dict>
					<dict>
						<key>match</key>
						<string>(?ix)(?&lt;=^|\s)(LANGUAGE\s+(SQLSCRIPT|SQL|GRAPH))(?=\s+|\.)</string>
						<key>name</key>
						<string>storage.modifier.method.abap</string>
					</dict>
					<dict>
						<key>match</key>
						<string>(?ix)(?&lt;=\s)(USING)\s+([a-z_\/][a-z_0-9\/=\&gt;]*)+(?=\s+|\.)</string>
						<key>captures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>storage.modifier.method.abap</string>
							</dict>
						</dict>
					</dict>
					<dict>
						<key>begin</key>
						<string>(?=[A-Za-z_][A-Za-z0-9_]*)</string>
						<key>end</key>
						<string>(?![A-Za-z0-9_])</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#generic_names</string>
							</dict>
						</array>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>(?ix)^\s*(INTERFACE)\s([a-z_\/][a-z_0-9\/]*)</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>storage.type.block.abap</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>entity.name.type.abap</string>
					</dict>
				</dict>
				<key>end</key>
				<string>\s*\.\s*\n?</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>match</key>
						<string>(?ix)(?&lt;=^|\s)(DEFERRED|PUBLIC)(?=\s+|\.)</string>
						<key>name</key>
						<string>storage.modifier.method.abap</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>(?ix)^\s*(FORM)\s([a-z_\/][a-z_0-9\/\-\?]*)</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>storage.type.block.abap</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>entity.name.type.abap</string>
					</dict>
				</dict>
				<key>end</key>
				<string>\s*\.\s*\n?</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>match</key>
						<string>(?ix)(?&lt;=^|\s)(USING|TABLES|CHANGING|RAISING|IMPLEMENTATION|DEFINITION)(?=\s+|\.)</string>
						<key>name</key>
						<string>storage.modifier.form.abap</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#abaptypes</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#keywords_followed_by_braces</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>match</key>
				<string>(?i)(endclass|endmethod|endform|endinterface)</string>
				<key>name</key>
				<string>storage.type.block.end.abap</string>
			</dict>
			<dict>
				<key>match</key>
				<string>(?i)(&lt;[A-Za-z_][A-Za-z0-9_]*&gt;)</string>
				<key>name</key>
				<string>variable.other.field.symbol.abap</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#keywords</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#abap_constants</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#reserved_names</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#operators</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#builtin_functions</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#abaptypes</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#system_fields</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#sql_functions</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#sql_types</string>
			</dict>
		</array>
		<key>repository</key>
		<dict>
			<key>abap_constants</key>
			<dict>
				<key>match</key>
				<string>(?ix)(?&lt;=\s)(initial|null|@?space|@?abap_true|@?abap_false|@?abap_undefined|table_line|
                                %_final|%_hints|%_predefined|col_background|col_group|col_heading|col_key|col_negative|col_normal|col_positive|col_total|
				adabas|as400|db2|db6|hdb|oracle|sybase|mssqlnt|pos_low|pos_high)(?=\s|\.|,)</string>
				<key>name</key>
				<string>constant.language.abap</string>
			</dict>
			<key>reserved_names</key>
			<dict>
				<key>match</key>
				<string>(?ix)(?&lt;=\s)(me|super)(?=\s|\.|,|-&gt;)</string>
				<key>name</key>
				<string>constant.language.abap</string>
			</dict>
			<key>abaptypes</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>match</key>
						<string>(?ix)\s(abap_bool|string|xstring|any|clike|csequence|numeric|xsequence|decfloat|decfloat16|decfloat34|utclong|simple|int8|c|n|i|p|f|d|t|x)(?=\s|\.|,)</string>
						<key>name</key>
						<string>support.type.abap</string>
					</dict>
					<dict>
						<key>match</key>
						<string>(?ix)\s(TYPE|REF|TO|LIKE|LINE|OF|STRUCTURE|STANDARD|SORTED|HASHED|INDEX|TABLE|WITH|UNIQUE|NON-UNIQUE|SECONDARY|DEFAULT|KEY)(?=\s|\.|,)</string>
						<key>name</key>
						<string>keyword.control.simple.abap</string>
					</dict>
				</array>
			</dict>
			<key>arithmetic_operator</key>
			<dict>
				<key>match</key>
				<string>(?i)(?&lt;=\s)(\+|\-|\*|\*\*|\/|%|DIV|MOD|BIT-AND|BIT-OR|BIT-XOR|BIT-NOT)(?=\s)</string>
				<key>name</key>
				<string>keyword.control.simple.abap</string>
			</dict>
			<key>comparison_operator</key>
			<dict>
				<key>match</key>
				<string>(?i)(?&lt;=\s)(&lt;|&gt;|&lt;\=|&gt;\=|\=|&lt;&gt;|eq|ne|lt|le|gt|ge|cs|cp|co|cn|ca|na|ns|np|byte-co|byte-cn|byte-ca|byte-na|byte-cs|byte-ns|o|z|m)(?=\s)</string>
				<key>name</key>
				<string>keyword.control.simple.abap</string>
			</dict>
			<key>control_keywords</key>
			<dict>
				<key>match</key>
				<string>(?ix)(^|\s)(
	        at|case|catch|continue|do|elseif|else|endat|endcase|endcatch|enddo|endif|
	        endloop|endon|endtry|endwhile|if|loop|on|raise|try|while)(?=\s|\.|:)</string>
				<key>name</key>
				<string>keyword.control.flow.abap</string>
			</dict>
			<key>generic_names</key>
			<dict>
				<key>match</key>
				<string>[A-Za-z_][A-Za-z0-9_]*</string>
			</dict>
			<key>keywords</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#main_keywords</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#text_symbols</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#control_keywords</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#keywords_followed_by_braces</string>
					</dict>
				</array>
			</dict>
			<key>logical_operator</key>
			<dict>
				<key>match</key>
				<string>(?i)(?&lt;=\s)(not|or|and)(?=\s)</string>
				<key>name</key>
				<string>keyword.control.simple.abap</string>
			</dict>
			<key>system_fields</key>
			<dict>
				<key>match</key>
				<string>(?ix)\b(sy)-(abcde|batch|binpt|calld|callr|colno|cpage|cprog|cucol|curow|datar|datlo|datum|dayst|dbcnt|dbnam|dbsysc|dyngr|dynnr|fdayw|fdpos|host|index|langu|ldbpg|lilli|linct|linno|linsz|lisel|listi|loopc|lsind|macol|mandt|marow|modno|msgid|msgli|msgno|msgty|msgv[1-4]|opsysc|pagno|pfkey|repid|saprl|scols|slset|spono|srows|staco|staro|stepl|subrc|sysid|tabix|tcode|tfill|timlo|title|tleng|tvar[0-9]|tzone|ucomm|uline|uname|uzeit|vline|wtitl|zonlo)(?=\.|\s)</string>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>variable.language.abap</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>variable.language.abap</string>
					</dict>
				</dict>
			</dict>
			<key>main_keywords</key>
			<dict>
				<key>match</key>
				<string>(?ix)(?&lt;=^|\s)(
abap-source|
abstract|
accept|
accepting|
access|
according|
action|
activation|
actual|
add|
add-corresponding|
adjacent|
after|
alias|
aliases|
align|
all|
allocate|
alpha|
amdp|
analysis|
analyzer|
append|
appending|
application|
archive|
area|
arithmetic|
as|
ascending|
assert|
assign|
assigned|
assigning|
association|
asynchronous|
at|
attributes|
authority|
authority-check|
authorization|
auto|
back|
background|
backward|
badi|
base|
before|
begin|
behavior|
between|
binary|
bit|
blank|
blanks|
block|
blocks|
bound|
boundaries|
bounds|
boxed|
break|
break-point|
buffer|
by|
bypassing|
byte|
byte-order|
call|
calling|
cast|
casting|
cds|
center|
centered|
change|
changing|
channels|
char-to-hex|
character|
check|
checkbox|
cid|
circular|
class|
class-data|
class-events|
class-method|
class-methods|
class-pool|
cleanup|
clear|
client|
clients|
clock|
clone|
close|
cnt|
code|
collect|
color|
column|
comment|
comments|
commit|
common|
communication|
comparing|
component|
components|
compression|
compute|
concatenate|
cond|
condense|
condition|
connection|
constant|
constants|
context|
contexts|
control|
controls|
conv|
conversion|
convert|
copy|
corresponding|
count|
country|
cover|
create|
currency|
current|
cursor|
customer-function|
data|
database|
datainfo|
dataset|
date|
daylight|
ddl|
deallocate|
decimals|
declarations|
deep|
default|
deferred|
define|
delete|
deleting|
demand|
descending|
describe|
destination|
detail|
determine|
dialog|
did|
directory|
discarding|
display|
display-mode|
distance|
distinct|
divide|
divide-corresponding|
dummy|
duplicate|
duplicates|
duration|
during|
dynpro|
edit|
editor-call|
empty|
enabled|
enabling|
encoding|
end|
end-enhancement-section|
end-of-definition|
end-of-page|
end-of-selection|
end-test-injection|
end-test-seam|
endenhancement|
endexec|
endfunction|
endian|
ending|
endmodule|
endprovide|
endselect|
endwith|
engineering|
enhancement|
enhancement-point|
enhancement-section|
enhancements|
entities|
entity|
entries|
entry|
enum|
environment|
equiv|
errors|
escape|
escaping|
event|
events|
exact|
except|
exception|
exception-table|
exceptions|
excluding|
exec|
execute|
exists|
exit|
exit-command|
expanding|
explicit|
exponent|
export|
exporting|
extended|
extension|
extract|
fail|
failed|
features|
fetch|
field|
field-groups|
field-symbols|
fields|
file|
fill|
filter|
filters|
final|
find|
first|
first-line|
fixed-point|
flush|
following|
for|
format|
forward|
found|
frame|
frames|
free|
from|
full|
function|
function-pool|
generate|
get|
giving|
graph|
group|
groups|
handle|
handler|
hashed|
having|
header|
headers|
heading|
help-id|
help-request|
hide|
hint|
hold|
hotspot|
icon|
id|
identification|
identifier|
ignore|
ignoring|
immediately|
implemented|
implicit|
import|
importing|
in|
inactive|
incl|
include|
includes|
including|
increment|
index|
index-line|
indicators|
infotypes|
inheriting|
init|
initial|
initialization|
inner|
input|
insert|
instance|
instances|
intensified|
interface|
interface-pool|
interfaces|
internal|
intervals|
into|
inverse|
inverted-date|
is|
iso|
job|
join|
keep|
keeping|
kernel|
key|
keys|
keywords|
kind|
language|
last|
late|
layout|
leading|
leave|
left|
left-justified|
leftplus|
leftspace|
legacy|
length|
let|
level|
levels|
like|
line|
line-count|
line-selection|
line-size|
linefeed|
lines|
link|
list|
list-processing|
listbox|
load|
load-of-program|
local|
locale|
lock|
locks|
log-point|
logical|
lower|
mapped|
mapping|
margin|
mark|
mask|
match|
matchcode|
maximum|
members|
memory|
mesh|
message|
message-id|
messages|
messaging|
method|
methods|
mode|
modif|
modifier|
modify|
module|
move|
move-corresponding|
multiply|
multiply-corresponding|
name|
nametab|
native|
nested|
nesting|
new|
new-line|
new-page|
new-section|
next|
no|
no-display|
no-extension|
no-gap|
no-gaps|
no-grouping|
no-heading|
no-scrolling|
no-sign|
no-title|
no-zero|
nodes|
non-unicode|
non-unique|
number|
object|
objects|
objmgr|
obligatory|
occurence|
occurences|
occurrence|
occurrences|
occurs|
of|
offset|
on|
only|
open|
optional|
option|
options|
order|
others|
out|
outer|
output|
output-length|
overflow|
overlay|
pack|
package|
pad|
padding|
page|
parameter|
parameter-table|
parameters|
part|
partially|
pcre|
perform|
performing|
permissions|
pf-status|
places|
pool|
position|
pragmas|
preceding|
precompiled|
preferred|
preserving|
primary|
print|
print-control|
private|
privileged|
procedure|
process|
program|
property|
protected|
provide|
push|
pushbutton|
put|
query|
queue-only|
queueonly|
quickinfo|
radiobutton|
raising|
range|
ranges|
read|
read-only|
receive|
received|
receiving|
redefinition|
reduce|
ref|
reference|
refresh|
regex|
reject|
renaming|
replace|
replacement|
replacing|
report|
reported|
request|
requested|
required|
reserve|
reset|
resolution|
respecting|
response|
restore|
result|
results|
resumable|
resume|
retry|
return|
returning|
right|
right-justified|
rightplus|
rightspace|
rollback|
rows|
rp-provide-from-last|
run|
sap|
sap-spool|
save|
saving|
scale_preserving|
scale_preserving_scientific|
scan|
scientific|
scientific_with_leading_zero|
screen|
scroll|
scroll-boundary|
scrolling|
search|
seconds|
section|
select|
select-options|
selection|
selection-screen|
selection-set|
selection-sets|
selection-table|
selections|
send|
separate|
separated|
session|
set|
shared|
shift|
shortdump|
shortdump-id|
sign|
sign_as_postfix|
simple|
simulation|
single|
size|
skip|
skipping|
smart|
some|
sort|
sortable|
sorted|
source|
specified|
split|
spool|
spots|
sql|
stable|
stamp|
standard|
start-of-selection|
starting|
state|
statement|
statements|
static|
statics|
statusinfo|
step|
step-loop|
stop|
structure|
structures|
style|
subkey|
submatches|
submit|
subroutine|
subscreen|
substring|
subtract|
subtract-corresponding|
suffix|
sum|
summary|
supplied|
supply|
suppress|
switch|
symbol|
syntax-check|
syntax-trace|
system-call|
system-exceptions|
tab|
tabbed|
table|
tables|
tableview|
tabstrip|
target|
task|
tasks|
test|
test-injection|
test-seam|
testing|
text|
textpool|
then|
throw|
time|
times|
timestamp|
timezone|
title|
titlebar|
to|
tokens|
top-lines|
top-of-page|
trace-file|
trace-table|
trailing|
transaction|
transfer|
transformation|
translate|
transporting|
trmac|
truncate|
truncation|
type|
type-pool|
type-pools|
types|
uline|
unassign|
unbounded|
under|
unicode|
union|
unique|
unit|
unix|
unpack|
until|
unwind|
up|
update|
upper|
user|
user-command|
using|
utf-8|
uuid|
valid|
validate|
value|
value-request|
values|
vary|
varying|
version|
via|
visible|
wait|
when|
where|
width|
window|
windows|
with|
with-heading|
with-title|
without|
word|
work|
workspace|
write|
xml|
xsd|
yes|
zero|
zone
		        	)(?=\s|\.|:|,)</string>
				<key>name</key>
				<string>keyword.control.simple.abap</string>
			</dict>
			<key>text_symbols</key>
			<dict>
				<key>match</key>
				<string>(?ix)(?&lt;=^|\s)(text)-([A-Z0-9]{1,3})(?=\s|\.|:|,)</string>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.control.simple.abap</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>constant.numeric.abap</string>
					</dict>
				</dict>
			</dict>
			<key>keywords_followed_by_braces</key>
			<dict>
				<key>match</key>
				<string>(?ix)\b(data|value|field-symbol|final|reference|resumable)\((&lt;?[a-z_\/][a-z_0-9\/]*&gt;?)\)</string> 
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.control.simple.abap</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>variable.other.abap</string>
					</dict>
				</dict>
			</dict>
			<key>operators</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#other_operator</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#arithmetic_operator</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#comparison_operator</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#logical_operator</string>
					</dict>
				</array>
			</dict>
			<key>other_operator</key>
			<dict>
				<key>match</key>
				<string>(?&lt;=\s)(&amp;&amp;|&amp;|\?=|\+=|-=|\/=|\*=|&amp;&amp;=|&amp;=)(?=\s)</string>
				<key>name</key>
				<string>keyword.control.simple.abap</string>
			</dict>
			<key>builtin_functions</key>
			<dict>
				<key>match</key>
				<string>(?ix)(?&lt;=\s)(abs|sign|ceil|floor|trunc|frac|acos|asin|atan|cos|sin|tan|cosh|sinh|tanh|exp|log|log10|sqrt|strlen|xstrlen|charlen|lines|numofchar|dbmaxlen|round|rescale|nmax|nmin|cmax|cmin|boolc|boolx|xsdbool|contains|contains_any_of|contains_any_not_of|matches|line_exists|ipow|char_off|count|count_any_of|count_any_not_of|distance|condense|concat_lines_of|escape|find|find_end|find_any_of|find_any_not_of|insert|match|repeat|replace|reverse|segment|shift_left|shift_right|substring|substring_after|substring_from|substring_before|substring_to|to_upper|to_lower|to_mixed|from_mixed|translate|bit-set|line_index)(?=\()</string>
				<key>name</key>
				<string>entity.name.function.builtin.abap</string>
			</dict>
			<key>sql_types</key>
			<dict>
				<key>match</key>
				<string>(?ix)(?&lt;=\s)(char|clnt|cuky|curr|datn|dats|dec|decfloat16|decfloat34|fltp|int1|int2|int4|int8|lang|numc|quan|raw|sstring|timn|tims|unit|utclong)(?=\s|\(|\))</string>
				<key>name</key>
				<string>entity.name.type.sql.abap</string>
			</dict>
			<key>sql_functions</key>
			<dict>
				<key>match</key>
				<string>(?ix)(?&lt;=\s)(
abap_system_timezone|
abap_user_timezone|
abs|
add_days|
add_months|
allow_precision_loss|
as_geo_json|
avg|
bintohex|
cast|
ceil|
coalesce|
concat_with_space|
concat|
corr_spearman|
corr|
count|
currency_conversion|
datn_add_days|
datn_add_months|
datn_days_between|
dats_add_days|
dats_add_months|
dats_days_between|
dats_from_datn|
dats_is_valid|
dats_tims_to_tstmp|
dats_to_datn|
dayname|
days_between|
dense_rank|
division|
div|
extract_day|
extract_hour|
extract_minute|
extract_month|
extract_second|
extract_year|
first_value|
floor|
grouping|
hextobin|
initcap|
instr|
is_valid|
lag|
last_value|
lead|
left|
length|
like_regexpr|
locate_regexpr_after|
locate_regexpr|
locate|
lower|
lpad|
ltrim|
max|
median|
min|
mod|
monthname|
ntile|
occurrences_regexpr|
over|
product|
rank|
replace_regexpr|
replace|
rigth|
round|
row_number|
rpad|
rtrim|
stddev|
string_agg|
substring_regexpr|
substring|
sum|
tims_from_timn|
tims_is_valid|
tims_to_timn|
to_blob|
to_clob|
tstmp_add_seconds|
tstmp_current_utctimestamp|
tstmp_is_valid|
tstmp_seconds_between|
tstmp_to_dats|
tstmp_to_dst|
tstmp_to_tims|
tstmpl_from_utcl|
tstmpl_to_utcl|
unit_conversion|
upper|
utcl_add_seconds|
utcl_current|
utcl_seconds_between|
uuid|
var|
weekday
                                )(?=\()</string>
				<key>name</key>
				<string>entity.name.function.sql.abap</string>
			</dict>
		</dict>
		<key>scopeName</key>
		<string>source.abap</string>
		<key>uuid</key>
		<string>0357FFB4-EFFF-4DE9-8371-B0F9C8DF1B21</string>
	</dict>
</plist>
